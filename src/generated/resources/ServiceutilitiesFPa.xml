<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="5s.com.apgsga.it21.mybatis.services.vk">
<update id="utilities_f_pa_agps_get_annull_kosten_proz" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.agps_get_annull_kosten_proz( agps_id_in => #{AGPS_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_ag_annull_kostenpflichtig_jf" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.ag_annull_kostenpflichtig_jf( ag_id_in => #{AG_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_ag_get_beraterkomm_prozent" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.ag_get_beraterkomm_prozent( ag_id_in => #{AG_ID_IN, mode=IN, jdbcType=NUMERIC} ,	
kdvt_brutto_in => #{KDVT_BRUTTO_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_ag_get_id_text" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=VARCHAR2} := CALL
			vk.utilities_f_pa.ag_get_id_text( ag_id_in => #{AG_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_ag_im_aushang_jf" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.ag_im_aushang_jf( ag_id_in => #{AG_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_ag_is_visumspflichtig_jf" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.ag_is_visumspflichtig_jf( ag_id_in => #{AG_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_ag_zahlungsmodus_vekdvt_update" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.utilities_f_pa.ag_zahlungsmodus_vekdvt_update( in_ag_id => #{IN_AG_ID, mode=IN, jdbcType=NUMERIC} ,	
in_zahlungsmodus => #{IN_ZAHLUNGSMODUS, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_check_kurzfristigkeit_jc" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.check_kurzfristigkeit_jc( inaushangbeginn => #{INAUSHANGBEGINN, mode=IN, jdbcType=DATE} ,	
p_dispo_type => #{P_DISPO_TYPE, mode=IN, jdbcType=VARCHAR} 	
			)  
		}
</update>
<update id="utilities_f_pa_get_sonntag_von_datumswoche" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=DATE} := CALL
			vk.utilities_f_pa.get_sonntag_von_datumswoche( date_in => #{DATE_IN, mode=IN, jdbcType=DATE} 	
			)  
		}
</update>
<update id="utilities_f_pa_get_vp_email_infoblock" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=VARCHAR2} := CALL
			vk.utilities_f_pa.get_vp_email_infoblock( kdvt_id_in => #{KDVT_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_get_vp_email_subject" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=VARCHAR2} := CALL
			vk.utilities_f_pa.get_vp_email_subject( kdvt_id_in => #{KDVT_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_kdvt_akontorechnung_pruefen" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.kdvt_akontorechnung_pruefen( kdvt_id_in => #{KDVT_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_kdvt_annull_kostenpflichtig_jf" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.kdvt_annull_kostenpflichtig_jf( kdvt_id_in => #{KDVT_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_kdvt_check_ksr_verb_dig_kamp" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.kdvt_check_ksr_verb_dig_kamp( in_kdvt_id => #{IN_KDVT_ID, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_kdvt_hat_neue_direktbest_dig" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.kdvt_hat_neue_direktbest_dig( kdvt_id_in => #{KDVT_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_kdvt_im_aushang_jf" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.kdvt_im_aushang_jf( kdvt_id_in => #{KDVT_ID_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_kpg_ist_swa_asa_berechtigt" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.kpg_ist_swa_asa_berechtigt( p_kdvt_id => #{P_KDVT_ID, mode=IN, jdbcType=NUMERIC} ,	
p_inkl_annullationen_nach => #{P_INKL_ANNULLATIONEN_NACH, mode=IN, jdbcType=DATE} 	
			)  
		}
</update>
<update id="utilities_f_pa_ng_ant_ausstr_elnt_id_z1" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.utilities_f_pa.ng_ant_ausstr_elnt_id_z1( p_elnt_id => #{P_ELNT_ID, mode=IN, jdbcType=NUMERIC} ,	
p_per => #{P_PER, mode=IN, jdbcType=DATE} 	
			)  
		}
</update>
<update id="utilities_f_pa_set_werte_valid_rbat_v" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.utilities_f_pa.set_werte_valid_rbat_v( agat_id_in => #{AGAT_ID_IN, mode=IN, jdbcType=NUMERIC} ,	
rbat1_in => #{RBAT1_IN, mode=IN, jdbcType=NUMERIC} ,	rbat2_in => #{RBAT2_IN, mode=IN, jdbcType=NUMERIC} ,	
rbat3_in => #{RBAT3_IN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="utilities_f_pa_upload_link_erstellen_funktion" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=VARCHAR2} := CALL
			vk.utilities_f_pa.upload_link_erstellen_funktion( in_kdvt_id => #{IN_KDVT_ID, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
</mapper>