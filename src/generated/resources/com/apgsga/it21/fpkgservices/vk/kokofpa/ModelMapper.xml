<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apgsga.it21.fpkgservices.vk.kokofpa">
<update id="alle_koko_flzu_loeschen" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.koko_f_pa.alle_koko_flzu_loeschen( in_koko_id => #{IN_KOKO_ID, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="einz_fl_hinzu_add_fl_jf2" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.koko_f_pa.einz_fl_hinzu_add_fl_jf2( in_fl_oid => #{IN_FL_OID, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="einz_fl_hinzu_clear_jf1" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.koko_f_pa.einz_fl_hinzu_clear_jf1( 
			)  
		}
</update>
<update id="einz_fl_hinzu_jf3" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.koko_f_pa.einz_fl_hinzu_jf3( koko_id_in => #{KOKO_ID_IN, mode=IN, jdbcType=NUMERIC} ,	
anz_fl_angefordert => #{ANZ_FL_ANGEFORDERT, mode=IN, jdbcType=NUMERIC} ,	
anz_fl_durchgefuehrt => #{ANZ_FL_DURCHGEFUEHRT, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="fl_loeschen_add_fl_jf2" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.koko_f_pa.fl_loeschen_add_fl_jf2( in_kfz_id => #{IN_KFZ_ID, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="fl_loeschen_clear_jf1" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.koko_f_pa.fl_loeschen_clear_jf1( 
			)  
		}
</update>
<update id="fl_loeschen_jf3" parameterType="hashmap" statementType="CALLABLE">
		{ CALL #{RESULT, mode=OUT, jdbcType=NUMBER} := CALL
			vk.koko_f_pa.fl_loeschen_jf3( in_koko_id => #{IN_KOKO_ID, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="koko_flzu_checked_hinzufuegen" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.koko_f_pa.koko_flzu_checked_hinzufuegen( in_koko_id => #{IN_KOKO_ID, mode=IN, jdbcType=NUMERIC} ,	
out_angeforderte => #{OUT_ANGEFORDERTE, mode=IN, jdbcType=NUMERIC} ,	
out_durchgefuehrte => #{OUT_DURCHGEFUEHRTE, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="koko_fl_loesen" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.koko_f_pa.koko_fl_loesen( in_koko_id => #{IN_KOKO_ID, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="koko_kopieren" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.koko_f_pa.koko_kopieren( koko_id_alt => #{KOKO_ID_ALT, mode=IN, jdbcType=NUMERIC} ,	
bezeichnung_in => #{BEZEICHNUNG_IN, mode=IN, jdbcType=VARCHAR} ,	
aushang_beginn_in => #{AUSHANG_BEGINN_IN, mode=IN, jdbcType=DATE} ,	
aushang_dauer_in => #{AUSHANG_DAUER_IN, mode=IN, jdbcType=NUMERIC} ,	
ausgleich_in => #{AUSGLEICH_IN, mode=IN, jdbcType=NUMERIC} ,	
mit_verfuegbarkeitsabfrage_in => #{MIT_VERFUEGBARKEITSABFRAGE_IN, mode=IN, jdbcType=NUMERIC} ,	
anzahl_fl_gewuenscht => #{ANZAHL_FL_GEWUENSCHT, mode=IN, jdbcType=NUMERIC} ,	
anzahl_fl_erhalten => #{ANZAHL_FL_ERHALTEN, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
<update id="koko_mit_kokokrs_erstellen" parameterType="hashmap" statementType="CALLABLE">
		{ CALL
			vk.koko_f_pa.koko_mit_kokokrs_erstellen( koko_id_in => #{KOKO_ID_IN, mode=IN, jdbcType=NUMERIC} ,	
koko_krs_id => #{KOKO_KRS_ID, mode=IN, jdbcType=NUMERIC} 	
			)  
		}
</update>
</mapper>